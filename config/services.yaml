# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    mailer_from: '%env(MAILER_SENDER_ADDRESS)%'
    app.otp.enabled: '%env(bool:APP_OTP_ENABLED)%'
    timezone: '%env(APP_TIMEZONE)%'
    locale: '%env(APP_LOCALE)%'
    
    # Stripe configuration
    stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'
    stripe_public_key: '%env(STRIPE_PUBLIC_KEY)%'
    stripe_webhook_secret: '%env(STRIPE_WEBHOOK_SECRET)%'
    stripe_success_url: '%env(STRIPE_SUCCESS_URL)%'
    stripe_cancel_url: '%env(STRIPE_CANCEL_URL)%'
    stripe_async_processing_enabled: '%env(bool:STRIPE_ASYNC_PROCESSING_ENABLED)%'
    
    # Payment system configuration
    payment_system_enabled: '%env(bool:PAYMENT_SYSTEM_ENABLED)%'
    default_discord_username: 'Symfony Logger'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            

# Configuration des notificateurs
    _instanceof:
        App\Interface\NotifierInterface:
            tags: ['app.notifier']
    
    # Configuration spécifique des notifiers si nécessaire
    App\Service\Notifier\EmailNotifier:
        arguments:
            $mailerFrom: '%env(MAILER_SENDER_ADDRESS)%'
            
    # Configuration du service Stripe avec cache
    App\Service\Stripe\StripeService:
        arguments:
            $cache: '@cache.app'
            
    # Alias pour NotifierInterface (utilisé par AuthService)
    App\Interface\NotifierInterface: '@App\Service\Notifier\EmailNotifier'

    # Discord Logger Factory - injection directe des webhooks
    App\Logger\DiscordHandlerFactory:
        arguments:
            $httpClient: '@http_client'
            $environment: '%kernel.environment%'
            $errorWebhook: '%env(DISCORD_WEBHOOK_ERROR)%'
            $infoWebhook: '%env(DISCORD_WEBHOOK_INFO)%'
            $systemWebhook: '%env(DISCORD_WEBHOOK_SYSTEM)%'
            $defaultUsername: '%env(default:default_discord_username:DISCORD_DEFAULT_USERNAME)%'
            $defaultAvatarUrl: '%env(default::DISCORD_DEFAULT_AVATAR_URL)%'
    
    # Discord Logger Handlers for different channels
    app.monolog.discord_error_handler:
        class: App\Logger\DiscordHandler
        factory: ['@App\Logger\DiscordHandlerFactory', 'createHandler']
        arguments: ['error', !php/const Monolog\Level::Error]
        
    app.monolog.discord_system_handler:
        class: App\Logger\DiscordHandler
        factory: ['@App\Logger\DiscordHandlerFactory', 'createHandler']
        arguments: ['system', !php/const Monolog\Level::Info]
        
    app.monolog.discord_info_handler:
        class: App\Logger\DiscordHandler
        factory: ['@App\Logger\DiscordHandlerFactory', 'createHandler']
        arguments: ['info', !php/const Monolog\Level::Info]
            
    # Controllers with named loggers
    App\Controller\LoggerExampleController:
        arguments:
            $discordErrorLogger: '@monolog.logger.discord_error'
            $discordSystemLogger: '@monolog.logger.discord_system'
            $discordInfoLogger: '@monolog.logger.discord_info'